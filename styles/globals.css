@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

h1, h2, h3, h4, h5  h6 {
  font-family: var(--font-fraunces), sans-serif;
  color: #282828;
  font-weight: 300;
  letter-spacing: -0.05rem;
}

.prose :where(h1, h2, h3, h4, h5  h6) {
  font-weight: 400 !important;
  margin-top: 4rem !important;
  margin-bottom: 1rem !important;
}

.prose p {
  color: #52525B;
  font-weight: 400;
  line-height: 28px;
  font-size: 16px;
  margin: 1rem 0;
}

.prose a strong {
  font-weight: 400;
}


.prose :where(p):not(:where([class~=not-prose] *)) {
  margin-top: 1.75rem;
  margin-bottom: 1.75rem;
}

.prose :where(ul,ol):not(:where([class~=not-prose] *)) {
  padding-left: 1.5rem;
}

.prose :where(.prose>*):not(:where([class~=not-prose] *)) {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.prose :where(a):not(:where([class~=not-prose] *)) {
  color: #4c9878;
  font-weight: 400;
  text-decoration: underline;
  text-decoration-color: #bcbaba77;
  transition-property: color,text-decoration-color;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  text-underline-offset: 2px;
}

.prose :where(ul,ol):not(:where([class~=not-prose] *)) {
  padding-left: 1.5rem;
}

.prose :where(ol):not(:where([class~=not-prose] *)) {
  list-style-type: decimal;
}

.prose :where(li):not(:where([class~=not-prose] *)) {
  margin-top: 1rem;
  margin-bottom: 1rem;
  padding-left: .875rem;
}

.prose ol {
  list-style-type: decimal;
}

.prose ul {
  list-style-type: disc;
}

.prose :where(ol>li):not(:where([class~=not-prose] *))::marker {
  color: var(--tw-prose-counters);
}

.prose :where(li):not(:where([class~=not-prose] *))::marker {
  font-size: .875rem;
  font-weight: 600;
}

.prose .anchor {
  @apply absolute invisible no-underline;
  margin-left: -1em;
  padding-right: 0.5em;
  width: 80%;
  max-width: 700px;
  cursor: pointer;
}

.anchor:hover {
  @apply visible;
}

.prose a {
  @apply transition-all text-[#4c9878] font-normal hover:text-[#4daa83];
}

.prose .anchor:after {
  @apply text-[#4c9878];
  content: '#';
}

.prose *:hover > .anchor {
  @apply visible;
}

.prose img {
  /* Don't apply styles to next/image */
  @apply m-0 rounded-2xl;
}

.prose > :first-child {
  /* Override removing top margin, causing layout shift */
  margin-top: 1.25em !important;
  margin-bottom: 1.25em !important;
}

/* Prism Styles */
.prose pre {
  @apply bg-zinc-900 rounded-xl dark:bg-[#0E0E10] text-zinc-300 overflow-x-auto p-4 border border-zinc-300/20;
}

.rehype-code-title {
  @apply mb-0  dark:bg-[#0E0E10] bg-zinc-900 px-4 py-2.5 text-white text-xs font-mono rounded-t-xl;
}
.prose code {
  @apply text-xs;
}

.rehype-code-title + pre {
  @apply mt-0 rounded-t-none border-t-0 bg-zinc-900 rounded-xl dark:bg-[#0E0E10];
}

code[class*="language-"],
pre[class*="language-"] {
	color: #f8f8f2;
	text-shadow: 0 1px rgba(0, 0, 0, 0.3);
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: 1.5;
	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;
	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
	padding: .1em;
	white-space: normal;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: #6272a4;
}

.token.punctuation {
	color: #f8f8f2;
}

.namespace {
	opacity: .7;
}

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
	color: #ff79c6;
}

.token.boolean,
.token.number {
	color: #bd93f9;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #50fa7b;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
	color: #f8f8f2;
}

.token.atrule,
.token.attr-value,
.token.function,
.token.class-name {
	color: #f1fa8c;
}

.token.keyword {
	color: #8be9fd;
}

.token.regex,
.token.important {
	color: #ffb86c;
}

.token.important,
.token.bold {
	font-weight: bold;
}

.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}

blockquote {
  @apply border-l-2 border-l-sky-400 pl-4 italic rounded text-sm;
}

code {
  color: #ef56ad;
}